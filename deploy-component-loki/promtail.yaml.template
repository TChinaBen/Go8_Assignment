---
# Source: promtail/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dev-promtail
  labels:
    helm.sh/chart: promtail-3.5.0
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
imagePullSecrets:
- name: registrysecret
---
# Source: promtail/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dev-promtail
  labels:
    helm.sh/chart: promtail-3.5.0
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
stringData:
  promtail.yaml: |
    server:
      log_level: info
      http_listen_port: 3101
    
    client:
      url: http://dev-loki-distributed-gateway.{{NAMESPACE}}/loki/api/v1/push
      
    
    positions:
      filename: /run/promtail/positions.yaml

    scrape_configs:
      # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference

      # 云控系统日志
      - job_name: mimic-system
        pipeline_stages:
          - docker: {}
          - tenant:
              value: mimic_system
          - regex:
              expression: ".*\\W?(?P<level>(?i)fatal|error|warn|info|debug)\\W.*"
          - template:
              source: level
              template: '{{if .Value}}{{ToLower .Value}}{{else}}unknown{{end}}'
          - labels:
              level:
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: ''
          source_labels:
          - __meta_kubernetes_pod_label_mimic_system
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_pod_label_mimic_system
          target_label: mimic_system
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - mimic_system
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
      # harbor日志
      - job_name: harbor
        pipeline_stages:
          - docker: {}
          - tenant:
              value: mimic_app
          - regex:
              expression: ".*\\W?(?P<level>(?i)fatal|error|warn|info|debug)\\W.*"
          - template:
              source: level
              template: '{{if .Value}}{{ToLower .Value}}{{else}}unknown{{end}}'
          - labels:
              level:
        static_configs:
          - targets:
              - localhost
            labels:
              harborjob: harborlogs # 在 Prometheus中，job 标签对于连接指标和日志很有用
              __path__: /var/log/harbor/core.log  
      # 应用日志
      - job_name: mimic-app
        pipeline_stages:
          - docker: {}
          - tenant:
              value: mimic_app
          - regex:
              expression: ".*\\W?(?P<level>(?i)fatal|error|warn|info|debug)\\W.*"
          - template:
              source: level
              template: '{{if .Value}}{{ToLower .Value}}{{else}}unknown{{end}}'
          - labels:
              level:
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: ''
          source_labels:
          - __meta_kubernetes_pod_label_mimicapp_name
        - action: replace
          replacement: $1
          separator: "-"
          source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_pod_label_mimicapp_name
          target_label: tenant
        - source_labels:
          - __meta_kubernetes_pod_label_mimicapp_name
          target_label: mimicapp_name
        - source_labels:
          - __meta_kubernetes_pod_label_app_name
          target_label: app_name
        - source_labels:
          - __meta_kubernetes_pod_label_mimic_flag
          target_label: mimic_flag
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
      # 其他日志
      - job_name: kubernetes-pods-direct-controllers
        pipeline_stages:
          - docker: {}
          - tenant:
              value: other
          - regex:
              expression: ".*\\W?(?P<level>(?i)fatal|error|warn|info|debug)\\W.*"
          - template:
              source: level
              template: '{{if .Value}}{{ToLower .Value}}{{else}}unknown{{end}}'
          - labels:
              level:
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: .+
          separator: ''
          source_labels:
          - __meta_kubernetes_pod_label_mimic_system
          - __meta_kubernetes_pod_label_mimicapp_name
        - action: drop
          regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
          source_labels:
          - __meta_kubernetes_pod_controller_name
        - source_labels:
          - __meta_kubernetes_pod_controller_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
      - job_name: kubernetes-pods-indirect-controller
        pipeline_stages:
          - docker: {}
          - tenant:
              value: other
          - regex:
              expression: ".*\\W?(?P<level>(?i)fatal|error|warn|info|debug)\\W.*"
          - template:
              source: level
              template: '{{if .Value}}{{ToLower .Value}}{{else}}unknown{{end}}'
          - labels:
              level:
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: .+
          separator: ''
          source_labels:
          - __meta_kubernetes_pod_label_mimic_system
          - __meta_kubernetes_pod_label_mimicapp_name
        - action: keep
          regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
          source_labels:
          - __meta_kubernetes_pod_controller_name
        - action: replace
          regex: '([0-9a-z-.]+)-[0-9a-f]{8,10}'
          source_labels:
          - __meta_kubernetes_pod_controller_name
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_uid
          - __meta_kubernetes_pod_container_name
          target_label: __path__
      - job_name: kubernetes-pods-static
        pipeline_stages:
          - docker: {}
          - tenant:
              value: other
          - regex:
              expression: ".*\\W?(?P<level>(?i)fatal|error|warn|info|debug)\\W.*"
          - template:
              source: level
              template: '{{if .Value}}{{ToLower .Value}}{{else}}unknown{{end}}'
          - labels:
              level:
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: drop
          regex: ''
          source_labels:
          - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_label_component
          target_label: __service__
        - source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: drop
          regex: ''
          source_labels:
          - __service__
        - action: replace
          replacement: $1
          separator: /
          source_labels:
          - __meta_kubernetes_namespace
          - __service__
          target_label: job
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_container_name
          target_label: container
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
          - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
          - __meta_kubernetes_pod_container_name
          target_label: __path__     

---
# Source: promtail/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dev-promtail
  labels:
    helm.sh/chart: promtail-3.5.0
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - watch
      - list
---
# Source: promtail/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dev-promtail
  labels:
    helm.sh/chart: promtail-3.5.0
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: dev-promtail
    namespace: {{NAMESPACE}}
roleRef:
  kind: ClusterRole
  name: dev-promtail
  apiGroup: rbac.authorization.k8s.io
---
# Source: promtail/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dev-promtail
  labels:
    helm.sh/chart: promtail-3.5.0
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: promtail
      app.kubernetes.io/instance: dev
  updateStrategy:
    {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: promtail
        app.kubernetes.io/instance: dev
      annotations:
        v1.multus-cni.io/default-network: default/flannel-conf
        checksum/config: 0d0b95a8124afd80b207a3b6d12bddc50d82d4bffb632574939d9b415245a4dc
    spec:
      serviceAccountName: dev-promtail
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      containers:
        - name: promtail
          image: {{PROMTAIL_IMAGE}}
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/promtail/promtail.yaml"
            - "-log.level=debug"
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: run
              mountPath: /run/promtail
            - mountPath: /home/docker/containers
              name: containers
              readOnly: true
            - mountPath: /var/log/pods
              name: pods
              readOnly: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - name: http-metrics
              containerPort: 3101
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - name: config
          secret:
            secretName: dev-promtail
        - name: run
          hostPath:
            path: /run/promtail
        - hostPath:
            path: /home/docker/containers
          name: containers
        - hostPath:
            path: /var/log/pods
          name: pods
