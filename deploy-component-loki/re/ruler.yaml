# Source: loki-distributed/templates/ruler/configmap-ruler.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rules-example
  labels:
    rules4tenant: other
data:
  rules.yaml: |
    groups:
    - name: example
      rules:
      - alert: HighPercentageError
        expr: sum by(level)(rate({level="error"}[5m])) > 10
        for: 5m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-loki-distributed-ruler
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ruler
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: ruler
  template:
    metadata:
      annotations:
        v1.multus-cni.io/default-network: default/flannel-conf
        checksum/config: a8d53966a778dd650d7972780244c8a97ca94016fb7985a0f5fe26fd17927bff
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: dev
        app.kubernetes.io/component: ruler
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: dev-loki-distributed
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 300
      containers:
        - name: rule-syncer
          image: 172.18.8.210:5000/library/rule-syncer:v1
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              value: loki
          volumeMounts:
            - name: rules
              mountPath: /etc/loki/rules          
        - name: loki
          image: 172.18.8.210:5000/library/loki:2.2.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=ruler
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: data
              mountPath: /var/loki
            - name: tmp
              mountPath: /tmp/loki
            - name: rules
              mountPath: /etc/loki/rules
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: dev
                  app.kubernetes.io/component: ruler
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: dev
                    app.kubernetes.io/component: ruler
                topologyKey: failure-domain.beta.kubernetes.io/zone

      volumes:
        - name: config
          configMap:
            name: dev-loki-distributed
        - name: rules
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: data
          emptyDir: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cm-reader
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-cm
subjects:
- kind: ServiceAccount
  name: dev-loki-distributed
  namespace: loki
roleRef:
  kind: Role
  name: cm-reader
  apiGroup: rbac.authorization.k8s.io
