# Source: loki-distributed/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dev-loki-distributed
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
imagePullSecrets:
- name: registrysecret
---
# Source: loki-distributed/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-loki-distributed
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    auth_enabled: true
    
    server:
      http_listen_port: 3100
    
    distributor:
      ring:
        kvstore:
          store: memberlist
    
    memberlist:
      join_members:
        - dev-loki-distributed-memberlist
          dev-loki-distributed-memberlist-2
    
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
      chunk_idle_period: 30m
      chunk_block_size: 262144
      chunk_encoding: snappy
      chunk_retain_period: 1m
      max_transfer_retries: 0
    
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
    
    schema_config:
      configs:
        - from: 2021-06-27
          store: boltdb-shipper
          object_store: aws
          schema: v11
          index:
            prefix: loki_index_
            period: 24h
    
    storage_config:
      boltdb_shipper:
        shared_store: s3
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
      aws:
        s3: s3://1SJD3A5AKIEP9LYYDRFB:4bACdXTXmyhuypwyFpGNs1qJrjJpZBBY2komXDgX@rook-ceph-rgw-my-store.rook-ceph.svc:80/ceph-bkt-f1279b65-df91-416a-8fa4-9484a29a6737
        s3forcepathstyle: true 
    
    chunk_store_config:
      max_look_back_period: 0
    
    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h
    
    query_range:
      align_queries_with_step: true
      max_retries: 5
      split_queries_by_interval: 15m
      cache_results: true
      results_cache:
        cache:
          enable_fifocache: true
          fifocache:
            max_size_items: 1024
            validity: 24h
    
    frontend_worker:
      frontend_address: dev-loki-distributed-query-frontend:9095
    
    frontend:
      log_queries_longer_than: 5s
      compress_responses: true
    
    compactor:
      shared_store: s3
    
    ruler:
      storage:
        type: local
        local:
          directory: /etc/loki/rules
      rule_path: /tmp/loki/scratch
      alertmanager_url: http://alertmanager-main.monitoring:9093
      external_url: http://alertmanager-main.monitoring:9093
      ring:
        kvstore:
          store: memberlist
     # alertmanager_url: http://alertmanager-main.monitoring.svc:9093
     # external_url: http://alertmanager-main.monitoring.svc:9093
---
# Source: loki-distributed/templates/gateway/configmap-gateway.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dev-loki-distributed-gateway
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
data:
  nginx.conf: |
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;
    
    events {
      worker_connections  4096;  ## Default: 1024
    }
    
    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
    
      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
            '"$request" $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
      access_log   /dev/stderr  main;
      sendfile     on;
      tcp_nopush   on;
      resolver kube-dns.kube-system.svc.cluster.local;
    
      server {
   
        listen             8080;
    
        location = / {
          return 200 'OK';
          auth_basic off;
        }
    
        location = /api/prom/push {
          proxy_pass       http://dev-loki-distributed-distributor.loki.svc.cluster.local:3100$request_uri;
        }
    
        location = /api/prom/tail {
          proxy_pass       http://dev-loki-distributed-querier.loki.svc.cluster.local:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
    
        location ~ /api/prom/.* {
          proxy_pass       http://dev-loki-distributed-query-frontend.loki.svc.cluster.local:3100$request_uri;
        }
    
        location = /loki/api/v1/push {
          proxy_pass       http://dev-loki-distributed-distributor.loki.svc.cluster.local:3100$request_uri;
        }
    
        location = /loki/api/v1/tail {
          proxy_pass       http://dev-loki-distributed-querier.loki.svc.cluster.local:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
    
        location ~ /loki/api/.* {
          proxy_pass       http://dev-loki-distributed-query-frontend.loki.svc.cluster.local:3100$request_uri;
        }
      }
    }
---
# Source: loki-distributed/templates/compactor/service-compactor.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-compactor
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: compactor
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: compactor
---
# Source: loki-distributed/templates/distributor/service-distributor.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-distributor
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: distributor
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: distributor
---
# Source: loki-distributed/templates/gateway/service-gateway.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-gateway
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
      nodePort: 30549
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: gateway
---
# Source: loki-distributed/templates/ingester/service-ingester-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-ingester-headless
  labels:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: ingester
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: ingester
---
# Source: loki-distributed/templates/ingester/service-ingester.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-ingester
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ingester
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: ingester
---
# Source: loki-distributed/templates/querier/service-querier-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-querier-headless
  labels:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: querier
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: querier
---
# Source: loki-distributed/templates/querier/service-querier.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-querier
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: querier
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: querier
---
# Source: loki-distributed/templates/query-frontend/service-query-frontend.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-query-frontend
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: query-frontend
---
# Source: loki-distributed/templates/ruler/service-ruler.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-ruler
  labels:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: ruler
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/component: ruler
---
# Source: loki-distributed/templates/service-memberlist.yaml
apiVersion: v1
kind: Service
metadata:
  name: dev-loki-distributed-memberlist
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 7946
      targetPort: http-memberlist
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/part-of: memberlist
---
# Source: loki-distributed/templates/compactor/deployment-compactor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-loki-distributed-compactor
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: compactor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: compactor
  template:
    metadata:
      annotations:
        v1.multus-cni.io/default-network: default/flannel-conf
        checksum/config: 467bd53443b6b867211a6982defddbaf516369027a43a99ceb946eb97be82bcb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: dev
        app.kubernetes.io/component: compactor
    spec:
      serviceAccountName: dev-loki-distributed
    #  nodeSelector:
    #    kubernetes.io/hostname: test-worker-1
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: loki
          image: 172.18.8.210:5000/library/loki:2.2.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=compactor
            - -boltdb.shipper.compactor.working-directory=/var/loki/compactor
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: data
              mountPath: /var/loki
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: dev-loki-distributed
        - name: data
          emptyDir: {} 

---
# Source: loki-distributed/templates/distributor/deployment-distributor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-loki-distributed-distributor
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: distributor
  template:
    metadata:
      annotations:
        v1.multus-cni.io/default-network: default/flannel-conf
        checksum/config: 467bd53443b6b867211a6982defddbaf516369027a43a99ceb946eb97be82bcb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: dev
        app.kubernetes.io/component: distributor
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: dev-loki-distributed
    #  nodeSelector:
    #    kubernetes.io/hostname: test-worker-2     
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: loki
          image: 172.18.8.210:5000/library/loki:2.2.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=distributor
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: dev
                  app.kubernetes.io/component: distributor
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: dev
                    app.kubernetes.io/component: distributor
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: dev-loki-distributed
---
# Source: loki-distributed/templates/gateway/deployment-gateway.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-loki-distributed-gateway
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: gateway
  template:
    metadata:
      annotations:
        v1.multus-cni.io/default-network: default/flannel-conf
        checksum/config: 52d45e2d9f64b80d685df111cea1b0cc7b90bfbd904852f4005dffab96f32577
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: dev
        app.kubernetes.io/component: gateway
    spec:
      serviceAccountName: dev-loki-distributed
    #  nodeSelector:
    #    kubernetes.io/hostname: test-worker-1
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      terminationGracePeriodSeconds: 30
      containers:
        - name: nginx
          image: 172.18.8.210:5000/library/nginx-unprivileged:1.19-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config
              mountPath: /etc/nginx
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: dev
                  app.kubernetes.io/component: gateway
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: dev
                    app.kubernetes.io/component: gateway
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: dev-loki-distributed-gateway
        - name: tmp
          emptyDir: {}
        - name: docker-entrypoint-d-override
          emptyDir: {}
---
# Source: loki-distributed/templates/query-frontend/deployment-query-frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-loki-distributed-query-frontend
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      annotations:
        v1.multus-cni.io/default-network: default/flannel-conf
        checksum/config: 467bd53443b6b867211a6982defddbaf516369027a43a99ceb946eb97be82bcb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: dev
        app.kubernetes.io/component: query-frontend
    spec:
      serviceAccountName: dev-loki-distributed
    #  nodeSelector:
    #    kubernetes.io/hostname: test-worker-1
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: loki
          image: 172.18.8.210:5000/library/loki:2.2.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=query-frontend
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: dev
                  app.kubernetes.io/component: query-frontend
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: dev
                    app.kubernetes.io/component: query-frontend
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: dev-loki-distributed
---
# Source: loki-distributed/templates/ingester/statefulset-ingester.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev-loki-distributed-ingester
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ingester
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 2
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: dev-loki-distributed-ingester-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: ingester
  template:
    metadata:
      annotations:
        v1.multus-cni.io/default-network: default/flannel-conf
        checksum/config: 467bd53443b6b867211a6982defddbaf516369027a43a99ceb946eb97be82bcb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: dev
        app.kubernetes.io/component: ingester
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: dev-loki-distributed     
    #  nodeSelector:
    #    kubernetes.io/hostname: test-worker-1
      terminationGracePeriodSeconds: 300
      containers:
        - name: loki
          image: 172.18.8.210:5000/library/loki:2.2.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=ingester
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: data
              mountPath: /var/loki
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: dev
                  app.kubernetes.io/component: ingester
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: dev
                    app.kubernetes.io/component: ingester
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: dev-loki-distributed
        - name: data
          emptyDir: {}
---
# Source: loki-distributed/templates/querier/statefulset-querier.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev-loki-distributed-querier
  labels:
    helm.sh/chart: loki-distributed-0.28.0
    app.kubernetes.io/name: loki-distributed
    app.kubernetes.io/instance: dev
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: querier
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 2
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: dev-loki-distributed-querier-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/instance: dev
      app.kubernetes.io/component: querier
  template:
    metadata:
      annotations:
        v1.multus-cni.io/default-network: default/flannel-conf
        checksum/config: 467bd53443b6b867211a6982defddbaf516369027a43a99ceb946eb97be82bcb
      labels:
        app.kubernetes.io/name: loki-distributed
        app.kubernetes.io/instance: dev
        app.kubernetes.io/component: querier
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: dev-loki-distributed
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: loki
          image: 172.18.8.210:5000/library/loki:2.2.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=querier
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: data
              mountPath: /var/loki
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki-distributed
                  app.kubernetes.io/instance: dev
                  app.kubernetes.io/component: querier
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-distributed
                    app.kubernetes.io/instance: dev
                    app.kubernetes.io/component: querier
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: dev-loki-distributed
        - name: data
          emptyDir: {}
#---
## Source: loki-distributed/templates/compactor/servicemonitor-compactor.yaml
#apiVersion: monitoring.coreos.com/v1
#kind: ServiceMonitor
#metadata:
#  name: dev-loki-distributed-compactor
#  labels:
#    helm.sh/chart: loki-distributed-0.28.0
#    app.kubernetes.io/name: loki-distributed
#    app.kubernetes.io/instance: dev
#    app.kubernetes.io/version: "2.2.0"
#    app.kubernetes.io/managed-by: Helm
#    app.kubernetes.io/component: compactor
#spec:
#  selector:
#    matchLabels:
#      app.kubernetes.io/name: loki-distributed
#      app.kubernetes.io/instance: dev
#      app.kubernetes.io/component: compactor
#  endpoints:
#    - port: http
#      scheme: http
#---
## Source: loki-distributed/templates/distributor/servicemonitor-distributor.yaml
#apiVersion: monitoring.coreos.com/v1
#kind: ServiceMonitor
#metadata:
#  name: dev-loki-distributed-distributor
#  labels:
#    helm.sh/chart: loki-distributed-0.28.0
#    app.kubernetes.io/name: loki-distributed
#    app.kubernetes.io/instance: dev
#    app.kubernetes.io/version: "2.2.0"
#    app.kubernetes.io/managed-by: Helm
#    app.kubernetes.io/component: distributor
#spec:
#  selector:
#    matchLabels:
#      app.kubernetes.io/name: loki-distributed
#      app.kubernetes.io/instance: dev
#      app.kubernetes.io/component: distributor
#  endpoints:
#    - port: http
#      scheme: http
#---
## Source: loki-distributed/templates/ingester/servicemonitor-ingester.yaml
#apiVersion: monitoring.coreos.com/v1
#kind: ServiceMonitor
#metadata:
#  name: dev-loki-distributed-ingester
#  labels:
#    helm.sh/chart: loki-distributed-0.28.0
#    app.kubernetes.io/name: loki-distributed
#    app.kubernetes.io/instance: dev
#    app.kubernetes.io/version: "2.2.0"
#    app.kubernetes.io/managed-by: Helm
#    app.kubernetes.io/component: ingester
#spec:
#  selector:
#    matchLabels:
#      app.kubernetes.io/name: loki-distributed
#      app.kubernetes.io/instance: dev
#      app.kubernetes.io/component: ingester
#  endpoints:
#    - port: http
#      scheme: http
#---
## Source: loki-distributed/templates/querier/servicemonitor-querier.yaml
#apiVersion: monitoring.coreos.com/v1
#kind: ServiceMonitor
#metadata:
#  name: dev-loki-distributed-querier
#  labels:
#    helm.sh/chart: loki-distributed-0.28.0
#    app.kubernetes.io/name: loki-distributed
#    app.kubernetes.io/instance: dev
#    app.kubernetes.io/version: "2.2.0"
#    app.kubernetes.io/managed-by: Helm
#    app.kubernetes.io/component: querier
#spec:
#  selector:
#    matchLabels:
#      app.kubernetes.io/name: loki-distributed
#      app.kubernetes.io/instance: dev
#      app.kubernetes.io/component: querier
#  endpoints:
#    - port: http
#      scheme: http
#---
## Source: loki-distributed/templates/query-frontend/servicemonitor-query-frontend.yaml
#apiVersion: monitoring.coreos.com/v1
#kind: ServiceMonitor
#metadata:
#  name: dev-loki-distributed-query-frontend
#  labels:
#    helm.sh/chart: loki-distributed-0.28.0
#    app.kubernetes.io/name: loki-distributed
#    app.kubernetes.io/instance: dev
#    app.kubernetes.io/version: "2.2.0"
#    app.kubernetes.io/managed-by: Helm
#    app.kubernetes.io/component: query-frontend
#spec:
#  selector:
#    matchLabels:
#      app.kubernetes.io/name: loki-distributed
#      app.kubernetes.io/instance: dev
#      app.kubernetes.io/component: query-frontend
#  endpoints:
#    - port: http
#      scheme: http
#---
## Source: loki-distributed/templates/ruler/servicemonitor-ruler.yaml
#apiVersion: monitoring.coreos.com/v1
#kind: ServiceMonitor
#metadata:
#  name: dev-loki-distributed-ruler
#  labels:
#    helm.sh/chart: loki-distributed-0.28.0
#    app.kubernetes.io/name: loki-distributed
#    app.kubernetes.io/instance: dev
#    app.kubernetes.io/version: "2.2.0"
#    app.kubernetes.io/managed-by: Helm
#    app.kubernetes.io/component: ruler
#spec:
#  selector:
#    matchLabels:
#      app.kubernetes.io/name: loki-distributed
#      app.kubernetes.io/instance: dev
#      app.kubernetes.io/component: ruler
#  endpoints:
#    - port: http
#      scheme: http
#
